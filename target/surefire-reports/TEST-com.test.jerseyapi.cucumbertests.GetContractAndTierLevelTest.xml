<?xml version="1.0" encoding="UTF-8" ?>
<testsuite tests="12" failures="0" name="com.test.jerseyapi.cucumbertests.GetContractAndTierLevelTest" time="1.747" errors="1" skipped="11">
  <properties>
    <property name="java.runtime.name" value="Java(TM) SE Runtime Environment"/>
    <property name="sun.boot.library.path" value="C:\Program Files\Java\jdk1.8.0_211\jre\bin"/>
    <property name="java.vm.version" value="25.211-b12"/>
    <property name="java.vm.vendor" value="Oracle Corporation"/>
    <property name="maven.multiModuleProjectDirectory" value="E:\Projects\Kaleem Brohi\jerseyapi"/>
    <property name="java.vendor.url" value="http://java.oracle.com/"/>
    <property name="path.separator" value=";"/>
    <property name="guice.disable.misplaced.annotation.check" value="true"/>
    <property name="java.vm.name" value="Java HotSpot(TM) 64-Bit Server VM"/>
    <property name="file.encoding.pkg" value="sun.io"/>
    <property name="user.script" value=""/>
    <property name="user.country" value="US"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="sun.os.patch.level" value=""/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="user.dir" value="E:\Projects\Kaleem Brohi\jerseyapi"/>
    <property name="java.runtime.version" value="1.8.0_211-b12"/>
    <property name="java.awt.graphicsenv" value="sun.awt.Win32GraphicsEnvironment"/>
    <property name="java.endorsed.dirs" value="C:\Program Files\Java\jdk1.8.0_211\jre\lib\endorsed"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.io.tmpdir" value="C:\Users\User\AppData\Local\Temp\"/>
    <property name="line.separator" value="
"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="user.variant" value=""/>
    <property name="os.name" value="Windows 10"/>
    <property name="classworlds.conf" value="E:\Projects\Kaleem Brohi\.metadata\.plugins\org.eclipse.m2e.launching\launches\m2conf6282781221045420455.tmp"/>
    <property name="sun.jnu.encoding" value="Cp1252"/>
    <property name="java.library.path" value="C:\Program Files\Java\jdk1.8.0_211\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_211/bin/server;C:/Program Files/Java/jre1.8.0_211/bin;C:/Program Files/Java/jre1.8.0_211/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Users\User\AppData\Local\Microsoft\WindowsApps;;C:\Program Files\eclipse-jee-2019-03-R-win32-x86_64 (1)\eclipse;;."/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="java.class.version" value="52.0"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="os.version" value="10.0"/>
    <property name="user.home" value="C:\Users\User"/>
    <property name="user.timezone" value="Asia/Karachi"/>
    <property name="java.awt.printerjob" value="sun.awt.windows.WPrinterJob"/>
    <property name="java.specification.version" value="1.8"/>
    <property name="file.encoding" value="Cp1252"/>
    <property name="user.name" value="User"/>
    <property name="java.class.path" value="C:\Program Files\eclipse-jee-2019-03-R-win32-x86_64 (1)\eclipse\plugins\org.eclipse.m2e.maven.runtime_1.11.0.20190220-2117\jars\plexus-classworlds-2.5.2.jar"/>
    <property name="java.vm.specification.version" value="1.8"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="java.home" value="C:\Program Files\Java\jdk1.8.0_211\jre"/>
    <property name="sun.java.command" value="org.codehaus.plexus.classworlds.launcher.Launcher -B install"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="user.language" value="en"/>
    <property name="awt.toolkit" value="sun.awt.windows.WToolkit"/>
    <property name="java.vm.info" value="mixed mode"/>
    <property name="java.version" value="1.8.0_211"/>
    <property name="java.ext.dirs" value="C:\Program Files\Java\jdk1.8.0_211\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext"/>
    <property name="sun.boot.class.path" value="C:\Program Files\Java\jdk1.8.0_211\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_211\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_211\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_211\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_211\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_211\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_211\jre\classes"/>
    <property name="java.vendor" value="Oracle Corporation"/>
    <property name="maven.home" value="E:\Projects\Kaleem Brohi\jerseyapi\EMBEDDED"/>
    <property name="file.separator" value="\"/>
    <property name="java.vendor.url.bug" value="http://bugreport.sun.com/bugreport/"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="sun.desktop" value="windows"/>
    <property name="sun.cpu.isalist" value="amd64"/>
  </properties>
  <testcase classname="Scenario: Validate get and contract tier services returns the response" name="Scenario: Validate get and contract tier services returns the response" time="0.142">
    <error message="java.net.BindException: Address already in use: bind" type="org.glassfish.jersey.test.spi.TestContainerException">org.glassfish.jersey.test.spi.TestContainerException: java.net.BindException: Address already in use: bind
	at org.glassfish.jersey.test.grizzly.GrizzlyTestContainerFactory$GrizzlyTestContainer.start(GrizzlyTestContainerFactory.java:89)
	at org.glassfish.jersey.test.JerseyTest.setUp(JerseyTest.java:588)
	at com.test.jerseyapi.stepdefinitions.GetContractAndTierLevelTestStepsDef.setUp(GetContractAndTierLevelTestStepsDef.java:37)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at cucumber.runtime.Utils$1.call(Utils.java:37)
	at cucumber.runtime.Timeout.timeout(Timeout.java:13)
	at cucumber.runtime.Utils.invoke(Utils.java:31)
	at cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)
	at cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:223)
	at cucumber.runtime.Runtime.runHooks(Runtime.java:211)
	at cucumber.runtime.Runtime.runBeforeHooks(Runtime.java:201)
	at cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:40)
	at cucumber.runtime.junit.ExecutionUnitRunner.run(ExecutionUnitRunner.java:91)
	at cucumber.runtime.junit.FeatureRunner.runChild(FeatureRunner.java:63)
	at cucumber.runtime.junit.FeatureRunner.runChild(FeatureRunner.java:18)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at cucumber.runtime.junit.FeatureRunner.run(FeatureRunner.java:70)
	at cucumber.api.junit.Cucumber.runChild(Cucumber.java:93)
	at cucumber.api.junit.Cucumber.runChild(Cucumber.java:37)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at cucumber.api.junit.Cucumber.run(Cucumber.java:98)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
Caused by: java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Net.java:433)
	at sun.nio.ch.Net.bind(Net.java:425)
	at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:223)
	at sun.nio.ch.ServerSocketAdaptor.bind(ServerSocketAdaptor.java:74)
	at org.glassfish.grizzly.nio.transport.TCPNIOBindingHandler.bindToChannelAndAddress(TCPNIOBindingHandler.java:107)
	at org.glassfish.grizzly.nio.transport.TCPNIOBindingHandler.bind(TCPNIOBindingHandler.java:64)
	at org.glassfish.grizzly.nio.transport.TCPNIOTransport.bind(TCPNIOTransport.java:215)
	at org.glassfish.grizzly.nio.transport.TCPNIOTransport.bind(TCPNIOTransport.java:195)
	at org.glassfish.grizzly.nio.transport.TCPNIOTransport.bind(TCPNIOTransport.java:186)
	at org.glassfish.grizzly.http.server.NetworkListener.start(NetworkListener.java:711)
	at org.glassfish.grizzly.http.server.HttpServer.start(HttpServer.java:256)
	at org.glassfish.jersey.test.grizzly.GrizzlyTestContainerFactory$GrizzlyTestContainer.start(GrizzlyTestContainerFactory.java:80)
	... 45 more
</error>
    <system-out>
1 Scenarios (&amp;#27;[33m1 undefined&amp;#27;[0m)
7 Steps (&amp;#27;[36m1 skipped&amp;#27;[0m, &amp;#27;[33m6 undefined&amp;#27;[0m)
0m1.142s


You can implement missing steps with the snippets below:

@Given(&quot;^User has sample request for proposed scan range edit service$&quot;)
public void user_has_sample_request_for_proposed_scan_range_edit_service() throws Throwable {
    // Write code here that turns the phrase above into concrete actions
    throw new PendingException();
}

@When(&quot;^scan range edit service called via postman$&quot;)
public void scan_range_edit_service_called_via_postman() throws Throwable {
    // Write code here that turns the phrase above into concrete actions
    throw new PendingException();
}

@Then(&quot;^the service call should be successful$&quot;)
public void the_service_call_should_be_successful() throws Throwable {
    // Write code here that turns the phrase above into concrete actions
    throw new PendingException();
}

@Then(&quot;^update record should be written to ScanRangeUpdate\\.txt &amp; activePSIData\\.txt files$&quot;)
public void update_record_should_be_written_to_ScanRangeUpdate_txt_activePSIData_txt_files() throws Throwable {
    // Write code here that turns the phrase above into concrete actions
    throw new PendingException();
}

@When(&quot;^scan range edit service called via postman with empty request body$&quot;)
public void scan_range_edit_service_called_via_postman_with_empty_request_body() throws Throwable {
    // Write code here that turns the phrase above into concrete actions
    throw new PendingException();
}

@Then(&quot;^update record should not be written to ScanRangeUpdate\\.txt &amp; activePSIData\\.txt files$&quot;)
public void update_record_should_not_be_written_to_ScanRangeUpdate_txt_activePSIData_txt_files() throws Throwable {
    // Write code here that turns the phrase above into concrete actions
    throw new PendingException();
}

</system-out>
    <system-err>Jul 02, 2019 3:27:12 AM org.glassfish.jersey.test.grizzly.GrizzlyTestContainerFactory$GrizzlyTestContainer &lt;init&gt;
INFO: Creating GrizzlyTestContainer configured at the base URI http://localhost:9998/
Jul 02, 2019 3:27:12 AM org.glassfish.jersey.internal.inject.Providers checkProviderRuntime
WARNING: A provider com.test.jerseyapi.model.Request registered in SERVER runtime does not implement any provider interfaces applicable in the SERVER runtime. Due to constraint configuration problems the provider com.test.jerseyapi.model.Request will be ignored. 
</system-err>
  </testcase>
  <testcase classname="Scenario: Validate get and contract tier services returns the response" name="Given User has sample request for get contract service" time="0.144">
    <skipped/>
  </testcase>
  <testcase classname="Scenario: Validate get and contract tier services returns the response" name="When get contract edit service called via postman" time="0.145">
    <skipped/>
  </testcase>
  <testcase classname="Scenario: Validate get and contract tier services returns the response" name="Then the get contract service call should be successful" time="0.145">
    <skipped/>
  </testcase>
  <testcase classname="Scenario: Validate get and contract tier services returns the response" name="When get contract service called via postman no params" time="0.145">
    <skipped/>
  </testcase>
  <testcase classname="Scenario: Validate get and contract tier services returns the response" name="Then the service call should be unsuccessful" time="0.146">
    <skipped/>
  </testcase>
  <testcase classname="Scenario: Validate get and contract tier services returns the response" name="Given User has sample request for get tier service" time="0.146">
    <skipped/>
  </testcase>
  <testcase classname="Scenario: Validate get and contract tier services returns the response" name="When get tier service called via postman" time="0.146">
    <skipped/>
  </testcase>
  <testcase classname="Scenario: Validate get and contract tier services returns the response" name="Then the get tier service call should be successful" time="0.146">
    <skipped/>
  </testcase>
  <testcase classname="Scenario: Validate get and contract tier services returns the response" name="When get tier service called via postman no params" time="0.147">
    <skipped/>
  </testcase>
  <testcase classname="Scenario: Validate get and contract tier services returns the response" name="Then the tier service call should be unsuccessful" time="0.147">
    <skipped/>
  </testcase>
  <testcase classname="Scenario: Validate get and contract tier services returns the response" name="Scenario: Validate get and contract tier services returns the response" time="0.148">
    <skipped/>
  </testcase>
</testsuite>